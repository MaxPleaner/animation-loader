// Generated by CoffeeScript 2.0.0-alpha1
(function() {
  var asset_dir, compile_video, exec_sync, gen_path, gen_tmp_png_path, loader_utils, querystring_parser, randomstring, to_resized, to_transparent_gif, to_webm_alpha, to_webm_regular;

  loader_utils = require('loader-utils');

  exec_sync = require('child_process').execSync;

  querystring_parser = require('querystring');

  randomstring = require('randomstring');

  asset_dir = "webm_overlay_assets";

  exec_sync(`mkdir -p ${asset_dir}`);

  gen_path = function(extension) {
    return `${asset_dir}/${randomstring.generate()}.${extension}`;
  };

  gen_tmp_png_path = function() {
    return `${asset_dir}/${randomstring.generate()}%03d.png`;
  };

  to_transparent_gif = function(in_gif_path, color, fuzz) {
    var cmd, new_path;
    fuzz || (fuzz = 25);
    color || (color = "000000");
    new_path = gen_path("gif");
    cmd = `convert ${in_gif_path} -coalesce -fuzz ${fuzz}% -transparent \"#${color}\" miff:- | convert -dispose background - ${new_path}`;
    exec_sync(cmd);
    exec_sync(`rm ${in_gif_path}`);
    return new_path;
  };

  to_resized = function(in_gif_path, new_size) {
    var new_path;
    new_path = gen_path("gif");
    exec_sync(`convert ${in_gif_path} -resize ${new_size}! ${new_path}`);
    exec_sync(`rm ${in_gif_path}`);
    return new_path;
  };

  to_webm_regular = function(in_gif_path) {
    var new_path;
    new_path = gen_path("webm");
    exec_sync(`ffmpeg -i ${in_gif_path} -c:v libvpx -crf 12 -b:v 500K ${new_path}`);
    exec_sync(`rm ${in_gif_path}`);
    return new_path;
  };

  to_webm_alpha = function(in_gif_path) {
    var new_path, tmp_png_path;
    new_path = gen_path("webm");
    tmp_png_path = gen_tmp_png_path();
    exec_sync(`convert ${in_gif_path} -coalesce ${tmp_png_path}\nffmpeg -f image2 -i ${tmp_png_path} -c:v libvpx -pix_fmt yuva420p ${new_path}\nrm ${asset_dir}/*png`);
    exec_sync(`rm ${in_gif_path}`);
    return new_path;
  };

  compile_video = function(remaining_request) {
    var color, full_path, fuzz, path, query, querystring, ref, resize, to_webm, transparent, was_made_transparent;
    ref = remaining_request.split("?"), full_path = ref[0], querystring = ref[1];
    query = querystring_parser.parse(querystring);
    path = `${asset_dir}/${randomstring.generate()}.gif`;
    exec_sync(`cp ${full_path} ${path}`);
    was_made_transparent = false;
    transparent = query.transparent, resize = query.resize, to_webm = query.to_webm, color = query.color, fuzz = query.fuzz;
    console.log(query);
    if (transparent) {
      path = to_transparent_gif(path, color, fuzz);
      was_made_transparent = true;
    }
    if (resize) {
      path = to_resized(path, resize);
    }
    if (to_webm) {
      path = to_webm_alpha(path);
    }
    return path;
  };

  module.exports = function(source) {
    var remaining_request, result;
    this.cachable && this.cachable();
    remaining_request = loader_utils.getRemainingRequest(this);
    result = compile_video(remaining_request);
    return this.callback(null, result);
  };

}).call(this);
